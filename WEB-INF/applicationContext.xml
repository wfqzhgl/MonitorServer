<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:annotation-config />
	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.it.web,com.it.service" />
	<!-- 启用MVC注解 -->
	<mvc:annotation-driven />

	<!--PropertyPlaceholderConfigurer 将jdbc.properties等属性文件导入，以便在配置文件中引用 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/jdbc.properties</value>
				<!-- <value>/WEB-INF/config.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- =========================================主数据库用来存放行为记录 开始======================================== -->
	<bean id="mainDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${it.main.jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${it.main.jdbc.url}" />
		<property name="user" value="${it.main.jdbc.username}" />
		<property name="password" value="${it.main.jdbc.password}" />
		<property name="acquireIncrement" value="${it.main.jdbc.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${it.main.jdbc.acquireRetryAttempts}" />
		<property name="maxPoolSize" value="${it.main.jdbc.maxPoolSize}" />
		<property name="minPoolSize" value="${it.main.jdbc.minPoolSize}" />
		<property name="initialPoolSize" value="${it.main.jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${it.main.jdbc.maxIdleTime}" />
		<property name="numHelperThreads" value="${it.main.jdbc.numHelperThreads}" />
	</bean>

	<!-- 主数据库对应的jdbc操作类 -->
	<bean id="jdbcTemplateMain" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="mainDataSource" />
	</bean>

	<!-- 主数据库对应的事务管理 -->
	<bean id="transactionManagerMain"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDataSource" />
	</bean>

	<bean id="baseConfigLoad" class="com.it.config.BaseConfigLoad"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
		<property name="propertiesfilename" value="../config.properties" />
	</bean>
	<bean id="redisConfigLoad" class="com.it.config.RedisConfig"
		factory-method="getInstance">
		<property name="propertiesfilename" value="../redis.properties" />
	</bean>

	<bean id="mapDatatoRedis" class="com.it.hadoop.MapDatatoRedis"
		factory-method="getInstance">
	</bean>
	
	<bean id="hourlyFlowJob" class="com.it.hadoop.HourlyFlowJob"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="hourlyLogJob" class="com.it.hadoop.HourlyLogJob"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
		<!-- 统计过去几小时 -->
		<property name="pastHour" value="1" />

	</bean>
	<bean id="deviceConfigLoad" class="com.it.config.DeviceConfigLoad"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="typeListLoad" class="com.it.config.TypeListLoad"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
		<property name="propertiesfilename" value="../level.properties" />
	</bean>

	<bean id="flowDeviceConfig" class="com.it.config.FlowDeviceConfig"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
		<property name="propertiesfilename" value="../flow_device.properties" />
	</bean>

	<bean id="addressConfig" class="com.it.config.AddressConfig"
		factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="hbaseBaseOP" class="com.it.hadoop.HbaseBaseOP"
		factory-method="getInstance">
	</bean>
	<bean id="geoLoad" class="com.it.config.GeoLoad" factory-method="getInstance">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>

	<bean id="ipParserLoad" class="com.it.config.IPParserLoad"
		factory-method="getInstance">
		<property name="ip_data_file"
			value="/data/soft/MonitorServer/WEB-INF/17monipdb.dat" />
		<property name="country_file" value="/data/soft/MonitorServer/WEB-INF/country.txt" />
		<property name="ip_data_maxmind"
			value="/data/soft/MonitorServer/WEB-INF/GeoLite2-City.mmdb" />
		<property name="ip_data_custom" value="/data/soft/MonitorServer/WEB-INF/ipdata.csv" />

	</bean>


	<bean id="eventGlobalDao" class="com.it.dao.EventGlobalDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="eventSpaceDao" class="com.it.dao.EventSpaceDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
		<property name="config" ref="baseConfigLoad" />

	</bean>
	<bean id="eventTimeDao" class="com.it.dao.EventTimeDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="eventTypeDao" class="com.it.dao.EventTypeDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="eventService" class="com.it.service.EventService"
		factory-method="getInstance">
		<property name="eventGlobalDao" ref="eventGlobalDao" />
		<property name="eventSpaceDao" ref="eventSpaceDao" />
		<property name="eventTimeDao" ref="eventTimeDao" />
		<property name="eventTypeDao" ref="eventTypeDao" />
	</bean>

	<bean id="monitorDeviceDao" class="com.it.dao.MonitorDeviceDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="monitorFlowDao" class="com.it.dao.MonitorFlowDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="monitorService" class="com.it.service.MonitorService"
		factory-method="getInstance">
		<property name="monitorDeviceDao" ref="monitorDeviceDao" />
		<property name="monitorFlowDao" ref="monitorFlowDao" />
	</bean>
	<bean id="authDao" class="com.it.dao.AuthDao">
		<property name="jdbcTemplate" ref="jdbcTemplateMain" />
	</bean>
	<bean id="authService" class="com.it.service.AuthService"
		factory-method="getInstance">
		<property name="authDao" ref="authDao" />
	</bean>

	<!-- REDIS客户端 -->
	<!-- <bean id="jedisUtils" class="com.it.cache.JedisUtils" factory-method="getInstance" 
		/> -->

	<!-- 定时加载配置信息的加载类 -->
	<bean id="schedulerConfigLoad" class="com.it.config.load.SchedulerConfigLoad"
		init-method="load">
		<property name="lstConfigLoad">
			<list>
				<ref bean="baseConfigLoad" />
				<ref bean="deviceConfigLoad" />
				<ref bean="ipParserLoad" />
				<ref bean="redisConfigLoad" />
				<ref bean="addressConfig" />
				<ref bean="geoLoad" />
				<ref bean="typeListLoad" />
				<ref bean="flowDeviceConfig" />
			</list>
		</property>
	</bean>


</beans>
